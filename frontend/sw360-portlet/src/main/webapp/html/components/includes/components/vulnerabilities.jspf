<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib prefix="portlet" uri="http://java.sun.com/portlet_2_0" %>
<%@ page import="org.eclipse.sw360.datahandler.thrift.RequestStatus" %>
<%@ page import="org.eclipse.sw360.datahandler.thrift.VerificationState" %>
<%@ page import="org.eclipse.sw360.portal.common.PortalConstants" %>
<%--
  ~ Copyright Siemens AG, 2016-2017. Part of the SW360 Portal Project.
  ~ With modifications from Bosch Software Innovations GmbH, 2016.
  ~
  ~ SPDX-License-Identifier: EPL-1.0
  ~
  ~ All rights reserved. This program and the accompanying materials
  ~ are made available under the terms of the Eclipse Public License v1.0
  ~ which accompanies this distribution, and is available at
  ~ http://www.eclipse.org/legal/epl-v10.html
--%>
<portlet:resourceURL var="updateVulnerabilitiesURL">
    <portlet:param name="<%=PortalConstants.ACTION%>" value="<%=PortalConstants.UPDATE_VULNERABILITIES_COMPONENT%>"/>
</portlet:resourceURL>
<portlet:resourceURL var="updateVulnerabilityVerification">
    <portlet:param name="<%=PortalConstants.ACTION%>" value="<%=PortalConstants.UPDATE_VULNERABILITY_VERIFICATION%>"/>
</portlet:resourceURL>
<jsp:useBean id="vulnerabilityVerificationTooltips" type="java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.String>>"
             scope="request"/>
<jsp:useBean id="vulnerabilityMatchedByHistogram" type="java.util.Map<java.lang.String, java.lang.Integer>" scope="request"/>

<div id="vulnerabilityTableDiv">
    <table id="vulnerabilityTable" cellpadding="0" cellspacing="0" border="0" class="display">
        <tfoot>
        <tr>
            <th colspan="7"></th>
        </tr>
        </tfoot>
    </table>
    <%@include file="/html/utils/includes/modal.jspf" %>
    <%@include file="/html/utils/includes/vulnerabilityModal.jspf" %>
</div>
<div style="clear:both"></div>
<div class="pull-left">
    <ul>
        <core_rt:forEach items="${vulnerabilityMatchedByHistogram.keySet()}" var="matchedBy">
            <li>
                <b><sw360:out value='${vulnerabilityMatchedByHistogram.get(matchedBy)}'/></b>
                of the vulnerabilities were matched by
                <b><sw360:out value='${matchedBy}'/></b>
            </li>
        </core_rt:forEach>
    </ul>
</div>

<script type="text/javascript">
    require(['jquery', 'utils/includes/vulnerabilityModal', /* jquery-plugins */ 'jquery-ui', 'datatables', 'modules/datatables-utils'], function($, vulnerarbilityModal) {
        var vulnerabilityTable;
        var modal;

        /*This can not be document ready function as liferay definitions need to be loaded first*/
        $(window).load(function () {
            createVulnerabilityTable();

            $('#vulnerabilityTable').on('change', '.action.change-vulnerability', function(event) {
                var data = $(event.currentTarget).data();
                changeVerification(this, data.externalVulnerabilityId, data.vulnerabilityRating, data.internalReleaseId);
            });
        });

        function createVulnerabilityTable() {
            var result = [];

            <core_rt:forEach items="${vulnerabilityList}" var="vulnerability">
            result.push({
                "DT_RowId": "${vulnerability.id}",
                "0": "${vulnerability.intReleaseName}",
                "1": "<sw360:DisplayVulnerabilityLink vulnerabilityId="${vulnerability.externalId}"/>",
                "2": '<div class="dataTables_cell_nowrap" title="${vulnerability.priorityToolTip}">${vulnerability.priority}<img class="infopic" src="/sw360-portlet/images/ic_info.png"/></div>',
                "3": '<div class="dataTables_cell_nowrap" style="max-width:500px;" title="<c:out value='${vulnerability.title} - ${vulnerability.description}'/>">' +
                        '<c:out value='${vulnerability.title}'/></div>',
                "4": '<span title="Found with needle: <sw360:out value='${vulnerability.usedNeedle}'/>"><sw360:out value='${vulnerability.matchedBy}'/></span>',
                "5":
                <core_rt:choose>
                <core_rt:when test="${vulnerabilityVerificationEditable}">
                        '<select class="toplabelledInput action change-vulnerability" ' +
                        'id="verificationChangeSelectFor${vulnerability.externalId}" ' +
                        'name="<portlet:namespace/><%=VerificationState.class%>" ' +
                        'data-external-vulnerability-id="${vulnerability.externalId}"' +
                        'data-vulnerability-rating="${vulnerabilityVerifications.get(vulnerability.externalId).get(vulnerability.intReleaseId).ordinal()}"' +
                        'data-internal-release-id="${vulnerability.intReleaseId}"' +
                        'title="<sw360:out value='${vulnerabilityVerificationTooltips.get(vulnerability.externalId).get(vulnerability.intReleaseId)}'/>"'+
                        'style="min-width: 90px; min-height: 28px;">' +
                        <sw360:DisplayEnumOptions type="<%=VerificationState.class%>" selected="${vulnerabilityVerifications.get(vulnerability.externalId).get(vulnerability.intReleaseId)}" inQuotes="true"/> +
                        '</select>',
                </core_rt:when>
                <core_rt:otherwise>
                        '<div title="<sw360:out value='${vulnerabilityVerificationTooltips.get(vulnerability.externalId).get(vulnerability.intReleaseId)}'/>">'+
                        "<sw360:DisplayEnum value="${vulnerabilityVerifications.get(vulnerability.externalId).get(vulnerability.intReleaseId)}"/>"+
                        '</div>',
                </core_rt:otherwise>
                </core_rt:choose>
                "6": '<div class="dataTables_cell_nowrap">${vulnerability.action}</div>'
            });
            </core_rt:forEach>

            vulnerabilityTable = $('#vulnerabilityTable').dataTable({
                pagingType: "simple_numbers",
                "data": result,
                "dom": "lBfrtip",
                "buttons": [
                    {
                        extend: 'print',
                        text: 'Print',
                        autoPrint: true,
                        className: 'custom-print-button',
                        exportOptions: {
                            columns: [0, 1, 2, 3, 4, 5]
                        }

                    }
                ],
                "columns": [
                    {"title": "Release"},
                    {"title": "External id"},
                    {"title": "Priority"},
                    {"title": "Title"},
                    {"title": "Matched by"},
                    <core_rt:choose>
                    <core_rt:when test="${vulnerabilityVerificationEditable}">
                    {"title": "Verification", "orderDataType": "sort-select" },
                    </core_rt:when>
                    <core_rt:otherwise>
                    {"title": "Verification"},
                    </core_rt:otherwise>
                    </core_rt:choose>
                    {"title": "Action"}
                ],
                "order": [[ 2, 'asc' ], [ 3, 'desc' ]],
                "autoWidth": false
            });
            vulnerabilityTable.$('td').tooltip({
                "delay": 0,
                "track": true,
                "fade": 250,
                "content": function () {
                    return $(this).prop('title');
                }
            });
        }

        function changeVerification(currentselect, vulnerabilityId, oldValue, releaseId) {
            releaseVerificationChangeSelect = currentselect;
            var newValue = currentselect.value;
            ratingModal = vulnerarbilityModal.createModalDialog(vulnerabilityId, oldValue, newValue, releaseId, executeRatingChange, function() {
                releaseVerificationChangeSelect.value = oldValue;
            });

            var newValueText = $(currentselect).children("option:selected").text();
            ratingModal.setHeader("If you want to change the verification of " + vulnerabilityId + " to &raquo;" + newValueText +
                    "&laquo; enter a comment and press OK.");
        }

        function executeRatingChange(vulnerabilityId, newValue, comment, oldValue, releaseId){
            var data = new Object();
            data["<portlet:namespace/><%=PortalConstants.RELEASE_ID%>"] = releaseId;
            data["<portlet:namespace/><%=PortalConstants.VULNERABILITY_ID%>"] = vulnerabilityId;
            data["<portlet:namespace/><%=PortalConstants.VULNERABILITY_VERIFICATION_VALUE%>"] = newValue;
            data["<portlet:namespace/><%=PortalConstants.VULNERABILITY_VERIFICATION_COMMENT%>"] = comment;

            $.ajax({
                url: '<%=updateVulnerabilityVerification%>',
                type: 'POST',
                dataType: 'json',
                data: data,
                success: function(response){
                    var selectId = "verificationChangeSelectFor"+response.<%=PortalConstants.VULNERABILITY_ID%>;
                    switch(response.<%=PortalConstants.REQUEST_STATUS%>) {
                        case '<%=RequestStatus.FAILURE%>':
                            showStatusPopup("",modal,"Update failed.");
                            document.getElementById(selectId).value = oldValue;
                            break;
                        case '<%=RequestStatus.SUCCESS%>':
                            document.getElementById("numberOfVulnerabilitiesDiv").class ="numberOfVulnerabilitiesNeedUpdate";
                            document.getElementById("numberOfVulnerabilitiesDiv").innerHTML='&#8634;';
                            document.getElementById(selectId).title = "You just changed this value.";
                            break;
                        default:
                    }
                }
            });
        }
    });
</script>


