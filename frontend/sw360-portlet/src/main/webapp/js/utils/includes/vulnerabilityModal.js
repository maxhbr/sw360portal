/*
 * Copyright Siemens AG, 2013-2017. Part of the SW360 Portal Project.
 *
 * SPDX-License-Identifier: EPL-1.0
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 */
define('utils/includes/vulnerabilityModal', ['jquery'], function($) {
    var config = $('#vulnerabilityModal').data();

    function createModalWithInput(vulnerabilityId, oldValue, newValue, releaseId, executeRatingChange, cancelCallback) {
        var inputmodal;
        var inputcomment;
        AUI().use(
                'aui-modal',
                function (Y) {
                    inputmodal = new Y.Modal(
                            Object.assign({
                                bodyContent:'<textarea class="vulnerabilityRatingCommentArea" id="commentInput" name="' + config.portletNamespace + 'comment" type="text" placeholder="Enter comment" />',
                                centered: true,
                                destroyOnHide: true,
                                modal: true,
                                render: '#vulnerabilityModal',
                                width: 450,
                                height: 500
                            })
                    );
                    inputmodal.setHeader = function (content) {
                        this.set('headerContent', '<h5>' + content + '</h5>');
                    };
                    inputmodal.addToolbar([
                        {
                            label: 'Cancel',
                            on: {
                                click: function () {
                                    cancelCallback();
                                    inputmodal.hide();
                                }
                            }
                        },
                        {
                            label: 'OK',
                            on: {
                                click: function () {
                                    inputcomment = document.getElementById("commentInput").value;
                                    executeRatingChange(vulnerabilityId, newValue, inputcomment, oldValue, releaseId);
                                    inputmodal.hide();
                                }
                            }
                        }
                    ]);
                    inputmodal.render();
                    Y.one('body').on('key', function(event) {
                        inputmodal.once('visibleChange', function(event) {
                            if (event.prevVal === true) {
                                event.newVal = true;
                            }
                        });
                    }, 'esc');
                }
        );
        return inputmodal;
    }

    return {
        createModalDialog: createModalWithInput
    };
});
